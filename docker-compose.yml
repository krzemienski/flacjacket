version: '3'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=flacjacket
      - POSTGRES_PASSWORD=flacjacket
      - POSTGRES_DB=flacjacket
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U flacjacket"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"

  backend:
    build: ./backend
    command: >
      bash -c "flask db upgrade &&
              gunicorn --bind 0.0.0.0:5000 --workers 4 'app:create_app()'"
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    ports:
      - "5001:5000"
    environment:
      - FLASK_APP=app
      - FLASK_ENV=development
      - DATABASE_URL=postgresql://flacjacket:flacjacket@postgres/flacjacket
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  celery_worker:
    build: ./backend
    command: celery -A app.tasks worker --loglevel=info
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    environment:
      - DATABASE_URL=postgresql://flacjacket:flacjacket@postgres/flacjacket
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - PYTHONPATH=/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - REACT_APP_API_URL=http://localhost:5001
    depends_on:
      - backend

volumes:
  postgres_data:
  backend_uploads:
